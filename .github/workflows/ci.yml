name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true
        
    - name: Make scripts executable
      run: |
        chmod +x ./tools/lint.sh
        chmod +x ./build.sh
        chmod +x ./test.sh
        
    - name: Run linting
      run: ./tools/lint.sh

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true
        
    - name: Make scripts executable
      run: |
        chmod +x ./build.sh
        chmod +x ./test.sh
        
    - name: Build maestro CLI
      run: ./build.sh
      
    - name: Test binary functionality
      run: |
        ./maestro --version
        ./maestro --help
        ./maestro vectordb list --dry-run

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true
        
    - name: Make scripts executable
      run: |
        chmod +x ./build.sh
        chmod +x ./test.sh
        
    - name: Build maestro CLI
      run: ./build.sh
      
    - name: Run all tests
      run: ./test.sh
      
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          test-results/
          coverage.out
        retention-days: 30

  release-build:
    name: Release Build
    runs-on: ubuntu-latest
    needs: [lint, build, test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true
        
    - name: Make scripts executable
      run: |
        chmod +x ./build.sh
        chmod +x ./test.sh
        
    - name: Build maestro CLI
      run: ./build.sh
      
    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: maestro-cli-${{ matrix.os }}
        path: maestro*
        retention-days: 90
